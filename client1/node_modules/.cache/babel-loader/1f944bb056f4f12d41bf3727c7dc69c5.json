{"ast":null,"code":"var _jsxFileName = \"/home/faisal/ServerExample/client/client1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"TIK TAK TOE GRID\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Grid;\n\nconst PreGame = _ref => {\n  let {\n    socket,\n    waiting\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Jeux du morpion \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => socket.emit(\"join game\"),\n        children: \"join the game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: waiting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = PreGame;\n\nfunction App() {\n  _s();\n\n  const [socket, setSocket] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  useEffect(() => {\n    const socket = io('http://localhost:8080');\n    socket.on(\"waiting for player.....\", () => {\n      setWaiting('waiting for player............');\n    });\n    socket.on(\"game started\", () => {\n      setGameStarted(true);\n    });\n    setSocket(socket);\n    return () => socket.disconnect();\n  }, []);\n  if (gameStarted) return /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 16\n  }, this);else return /*#__PURE__*/_jsxDEV(PreGame, {\n    socket: socket,\n    wainting: waiting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 16\n  }, this);\n}\n\n_s(App, \"Nq7ChfQkcyDDeOPKwBCjuaXQ1Hw=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"PreGame\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","Grid","PreGame","socket","waiting","emit","App","setSocket","setWaiting","gameStarted","setGameStarted","on","disconnect"],"sources":["/home/faisal/ServerExample/client/client1/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport {io} from 'socket.io-client'\n\nconst Grid = () => {\n    return (\n        <div>\n            TIK TAK TOE GRID\n        </div>\n    )\n}\n\nconst PreGame = ({socket, waiting}) => {\n    return (\n        <div className=\"App\">\n            <h1 className='title'> Jeux du morpion </h1>\n            <div className=\"container\">\n                <button className=\"button\"onClick={() => socket.emit(\"join game\")}>join the game</button>\n            </div>\n            <div className='title'>{waiting}</div>\n        </div>\n    )\n}\n\nfunction App() {\n    const [socket, setSocket] = useState(false)   \n    const [waiting, setWaiting] = useState(false)  \n    const [gameStarted, setGameStarted] = useState(false)\n\n    useEffect(() => {\n        const socket = io('http://localhost:8080')\n        socket.on(\"waiting for player.....\", () => {\n            setWaiting('waiting for player............')\n        })\n        socket.on(\"game started\",() => {\n            setGameStarted(true)\n        })\n        setSocket(socket)\n        return () => socket.disconnect()\n    }, [])\n\n    if (gameStarted)\n        return <Grid/>\n    else\n        return <PreGame\n                    socket={socket}\n                    wainting={waiting}\n                />\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,EAAR,QAAiB,kBAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACf,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;KAAMA,I;;AAQN,MAAMC,OAAO,GAAG,QAAuB;EAAA,IAAtB;IAACC,MAAD;IAASC;EAAT,CAAsB;EACnC,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAI,SAAS,EAAC,OAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAQ,SAAS,EAAC,QAAlB;QAA0B,OAAO,EAAE,MAAMD,MAAM,CAACE,IAAP,CAAY,WAAZ,CAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAK,SAAS,EAAC,OAAf;MAAA,UAAwBD;IAAxB;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAVD;;MAAMF,O;;AAYN,SAASI,GAAT,GAAe;EAAA;;EACX,MAAM,CAACH,MAAD,EAASI,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACK,OAAD,EAAUI,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACZ,MAAMK,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;IACAG,MAAM,CAACQ,EAAP,CAAU,yBAAV,EAAqC,MAAM;MACvCH,UAAU,CAAC,gCAAD,CAAV;IACH,CAFD;IAGAL,MAAM,CAACQ,EAAP,CAAU,cAAV,EAAyB,MAAM;MAC3BD,cAAc,CAAC,IAAD,CAAd;IACH,CAFD;IAGAH,SAAS,CAACJ,MAAD,CAAT;IACA,OAAO,MAAMA,MAAM,CAACS,UAAP,EAAb;EACH,CAVQ,EAUN,EAVM,CAAT;EAYA,IAAIH,WAAJ,EACI,oBAAO,QAAC,IAAD;IAAA;IAAA;IAAA;EAAA,QAAP,CADJ,KAGI,oBAAO,QAAC,OAAD;IACK,MAAM,EAAEN,MADb;IAEK,QAAQ,EAAEC;EAFf;IAAA;IAAA;IAAA;EAAA,QAAP;AAIP;;GAxBQE,G;;MAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
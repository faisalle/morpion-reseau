{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var GenericReceiver,\n      MAP,\n      ResponseReceiver,\n      Session,\n      SockJSConnection,\n      Transport,\n      closeFrame,\n      register,\n      stream,\n      utils,\n      uuidv4,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n  uuidv4 = require('uuid').v4;\n  utils = require('./utils');\n\n  Transport = function () {\n    function Transport() {}\n\n    return Transport;\n  }();\n\n  Transport.CONNECTING = 0;\n  Transport.OPEN = 1;\n  Transport.CLOSING = 2;\n  Transport.CLOSED = 3;\n\n  closeFrame = function (status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n\n  SockJSConnection = function (superClass) {\n    extend(SockJSConnection, superClass);\n\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n\n    SockJSConnection.prototype.toString = function () {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n\n    SockJSConnection.prototype.write = function (string) {\n      return this._session.send('' + string);\n    };\n\n    SockJSConnection.prototype.end = function (string) {\n      if (string) {\n        this.write(string);\n      }\n\n      this.close();\n      return null;\n    };\n\n    SockJSConnection.prototype.close = function (code, reason) {\n      return this._session.close(code, reason);\n    };\n\n    SockJSConnection.prototype.destroy = function () {\n      this.end();\n      return this.removeAllListeners();\n    };\n\n    SockJSConnection.prototype.destroySoon = function () {\n      return this.destroy();\n    };\n\n    return SockJSConnection;\n  }(stream.Stream);\n\n  SockJSConnection.prototype.__defineGetter__('readable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('writable', function () {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('readyState', function () {\n    return this._session.readyState;\n  });\n\n  MAP = {};\n\n  Session = function () {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n\n      this.timeout_cb = function (_this) {\n        return function () {\n          return _this.didTimeout();\n        };\n      }(this);\n\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n\n      this.emit_open = function (_this) {\n        return function () {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      }(this);\n    }\n\n    Session.prototype.register = function (req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n\n      if (!this.recv) {\n        return;\n      }\n\n      this.tryFlush();\n    };\n\n    Session.prototype.decorateConnection = function (req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n\n    Session.prototype.unregister = function () {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n\n    Session.prototype.flushToRecv = function (recv) {\n      var ref, sb;\n\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n\n      return false;\n    };\n\n    Session.prototype.tryFlush = function () {\n      var x;\n\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n\n        x = function (_this) {\n          return function () {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        }(this);\n\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n\n    Session.prototype.didTimeout = function () {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n\n    Session.prototype.didMessage = function (payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n\n    Session.prototype.send = function (payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n\n      this.send_buffer.push('' + payload);\n\n      if (this.recv) {\n        this.tryFlush();\n      }\n\n      return true;\n    };\n\n    Session.prototype.close = function (status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n\n        if (this.recv) {\n          this.recv.didClose();\n        }\n\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n\n      return true;\n    };\n\n    return Session;\n  }();\n\n  Session.bySessionId = function (session_id) {\n    if (!session_id) {\n      return null;\n    }\n\n    return MAP[session_id] || null;\n  };\n\n  register = function (req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n\n    session.register(req, receiver);\n    return session;\n  };\n\n  exports.register = function (req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n\n  exports.registerNoSession = function (req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n\n  GenericReceiver = function () {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n\n    GenericReceiver.prototype.setUp = function () {\n      this.thingy_end_cb = function (_this) {\n        return function () {\n          return _this.didAbort();\n        };\n      }(this);\n\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n\n    GenericReceiver.prototype.tearDown = function () {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n\n    GenericReceiver.prototype.didAbort = function () {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n\n    GenericReceiver.prototype.didClose = function () {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n\n    GenericReceiver.prototype.doSendBulk = function (messages) {\n      var m, q_msgs;\n\n      q_msgs = function () {\n        var i, len, results;\n        results = [];\n\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n\n        return results;\n      }();\n\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n\n    GenericReceiver.prototype.heartbeat = function () {\n      return this.doSendFrame('h');\n    };\n\n    return GenericReceiver;\n  }();\n\n  ResponseReceiver = function (superClass) {\n    extend(ResponseReceiver, superClass);\n    ResponseReceiver.prototype.max_response_size = void 0;\n    ResponseReceiver.prototype.delay_disconnect = true;\n\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n\n    ResponseReceiver.prototype.doSendFrame = function (payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n\n      return r;\n    };\n\n    ResponseReceiver.prototype.didClose = function () {\n      var x;\n\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n\n      return this.response = null;\n    };\n\n    return ResponseReceiver;\n  }(GenericReceiver);\n\n  exports.GenericReceiver = GenericReceiver;\n  exports.Transport = Transport;\n  exports.Session = Session;\n  exports.ResponseReceiver = ResponseReceiver;\n  exports.SockJSConnection = SockJSConnection;\n}).call(this);","map":{"version":3,"names":["GenericReceiver","MAP","ResponseReceiver","Session","SockJSConnection","Transport","closeFrame","register","stream","utils","uuidv4","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","v4","CONNECTING","OPEN","CLOSING","CLOSED","status","reason","JSON","stringify","superClass","_session","id","headers","prefix","toString","write","string","send","end","close","code","destroy","removeAllListeners","destroySoon","Stream","__defineGetter__","readyState","session_id1","server","session_id","heartbeat_delay","options","disconnect_delay","send_buffer","is_closing","timeout_cb","_this","didTimeout","to_tref","setTimeout","connection","emit_open","emit","req","recv","doSendFrame","didClose","clearTimeout","flushToRecv","close_frame","session","decorateConnection","process","nextTick","tryFlush","address","i","len","ref","remoteAddress","remotePort","socket","x","response","error","url","pathname","protocol","length","unregister","delay","delay_disconnect","sb","doSendBulk","heartbeat","Error","didMessage","payload","push","bySessionId","receiver","exports","registerNoSession","thingy","setUp","thingy_end_cb","didAbort","addListener","tearDown","removeListener","messages","m","q_msgs","results","quote","join","max_response_size","request","curr_response_size","setKeepAlive","response_limit","r","apply","arguments"],"sources":["/home/faisal/ServerExample/client/client/node_modules/sockjs/lib/transport.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var GenericReceiver, MAP, ResponseReceiver, Session, SockJSConnection, Transport, closeFrame, register, stream, utils, uuidv4,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  stream = require('stream');\n\n  uuidv4 = require('uuid').v4;\n\n  utils = require('./utils');\n\n  Transport = (function() {\n    function Transport() {}\n\n    return Transport;\n\n  })();\n\n  Transport.CONNECTING = 0;\n\n  Transport.OPEN = 1;\n\n  Transport.CLOSING = 2;\n\n  Transport.CLOSED = 3;\n\n  closeFrame = function(status, reason) {\n    return 'c' + JSON.stringify([status, reason]);\n  };\n\n  SockJSConnection = (function(superClass) {\n    extend(SockJSConnection, superClass);\n\n    function SockJSConnection(_session) {\n      this._session = _session;\n      this.id = uuidv4();\n      this.headers = {};\n      this.prefix = this._session.prefix;\n    }\n\n    SockJSConnection.prototype.toString = function() {\n      return '<SockJSConnection ' + this.id + '>';\n    };\n\n    SockJSConnection.prototype.write = function(string) {\n      return this._session.send('' + string);\n    };\n\n    SockJSConnection.prototype.end = function(string) {\n      if (string) {\n        this.write(string);\n      }\n      this.close();\n      return null;\n    };\n\n    SockJSConnection.prototype.close = function(code, reason) {\n      return this._session.close(code, reason);\n    };\n\n    SockJSConnection.prototype.destroy = function() {\n      this.end();\n      return this.removeAllListeners();\n    };\n\n    SockJSConnection.prototype.destroySoon = function() {\n      return this.destroy();\n    };\n\n    return SockJSConnection;\n\n  })(stream.Stream);\n\n  SockJSConnection.prototype.__defineGetter__('readable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('writable', function() {\n    return this._session.readyState === Transport.OPEN;\n  });\n\n  SockJSConnection.prototype.__defineGetter__('readyState', function() {\n    return this._session.readyState;\n  });\n\n  MAP = {};\n\n  Session = (function() {\n    function Session(session_id1, server) {\n      this.session_id = session_id1;\n      this.heartbeat_delay = server.options.heartbeat_delay;\n      this.disconnect_delay = server.options.disconnect_delay;\n      this.prefix = server.options.prefix;\n      this.send_buffer = [];\n      this.is_closing = false;\n      this.readyState = Transport.CONNECTING;\n      if (this.session_id) {\n        MAP[this.session_id] = this;\n      }\n      this.timeout_cb = (function(_this) {\n        return function() {\n          return _this.didTimeout();\n        };\n      })(this);\n      this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      this.connection = new SockJSConnection(this);\n      this.emit_open = (function(_this) {\n        return function() {\n          _this.emit_open = null;\n          return server.emit('connection', _this.connection);\n        };\n      })(this);\n    }\n\n    Session.prototype.register = function(req, recv) {\n      if (this.recv) {\n        recv.doSendFrame(closeFrame(2010, \"Another connection still open\"));\n        recv.didClose();\n        return;\n      }\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState === Transport.CLOSING) {\n        this.flushToRecv(recv);\n        recv.doSendFrame(this.close_frame);\n        recv.didClose();\n        this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n        return;\n      }\n      this.recv = recv;\n      this.recv.session = this;\n      this.decorateConnection(req);\n      if (this.readyState === Transport.CONNECTING) {\n        this.recv.doSendFrame('o');\n        this.readyState = Transport.OPEN;\n        process.nextTick(this.emit_open);\n      }\n      if (!this.recv) {\n        return;\n      }\n      this.tryFlush();\n    };\n\n    Session.prototype.decorateConnection = function(req) {\n      var address, headers, i, key, len, ref, remoteAddress, remotePort, socket, x;\n      if (!(socket = this.recv.connection)) {\n        socket = this.recv.response.connection;\n      }\n      try {\n        remoteAddress = socket.remoteAddress;\n        remotePort = socket.remotePort;\n        address = socket.address();\n      } catch (error) {\n        x = error;\n      }\n      if (remoteAddress) {\n        this.connection.remoteAddress = remoteAddress;\n        this.connection.remotePort = remotePort;\n        this.connection.address = address;\n      }\n      this.connection.url = req.url;\n      this.connection.pathname = req.pathname;\n      this.connection.protocol = this.recv.protocol;\n      headers = {};\n      ref = ['referer', 'x-client-ip', 'x-forwarded-for', 'x-forwarded-host', 'x-forwarded-port', 'x-cluster-client-ip', 'via', 'x-real-ip', 'x-forwarded-proto', 'x-ssl', 'dnt', 'host', 'user-agent', 'accept-language'];\n      for (i = 0, len = ref.length; i < len; i++) {\n        key = ref[i];\n        if (req.headers[key]) {\n          headers[key] = req.headers[key];\n        }\n      }\n      if (headers) {\n        return this.connection.headers = headers;\n      }\n    };\n\n    Session.prototype.unregister = function() {\n      var delay;\n      delay = this.recv.delay_disconnect;\n      this.recv.session = null;\n      this.recv = null;\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n      }\n      if (delay) {\n        return this.to_tref = setTimeout(this.timeout_cb, this.disconnect_delay);\n      } else {\n        return this.timeout_cb();\n      }\n    };\n\n    Session.prototype.flushToRecv = function(recv) {\n      var ref, sb;\n      if (this.send_buffer.length > 0) {\n        ref = [this.send_buffer, []], sb = ref[0], this.send_buffer = ref[1];\n        recv.doSendBulk(sb);\n        return true;\n      }\n      return false;\n    };\n\n    Session.prototype.tryFlush = function() {\n      var x;\n      if (!this.flushToRecv(this.recv) || !this.to_tref) {\n        if (this.to_tref) {\n          clearTimeout(this.to_tref);\n        }\n        x = (function(_this) {\n          return function() {\n            if (_this.recv) {\n              _this.to_tref = setTimeout(x, _this.heartbeat_delay);\n              return _this.recv.heartbeat();\n            }\n          };\n        })(this);\n        this.to_tref = setTimeout(x, this.heartbeat_delay);\n      }\n    };\n\n    Session.prototype.didTimeout = function() {\n      if (this.to_tref) {\n        clearTimeout(this.to_tref);\n        this.to_tref = null;\n      }\n      if (this.readyState !== Transport.CONNECTING && this.readyState !== Transport.OPEN && this.readyState !== Transport.CLOSING) {\n        throw Error('INVALID_STATE_ERR');\n      }\n      if (this.recv) {\n        throw Error('RECV_STILL_THERE');\n      }\n      this.readyState = Transport.CLOSED;\n      this.connection.emit('end');\n      this.connection.emit('close');\n      this.connection = null;\n      if (this.session_id) {\n        delete MAP[this.session_id];\n        return this.session_id = null;\n      }\n    };\n\n    Session.prototype.didMessage = function(payload) {\n      if (this.readyState === Transport.OPEN) {\n        this.connection.emit('data', payload);\n      }\n    };\n\n    Session.prototype.send = function(payload) {\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.send_buffer.push('' + payload);\n      if (this.recv) {\n        this.tryFlush();\n      }\n      return true;\n    };\n\n    Session.prototype.close = function(status, reason) {\n      if (status == null) {\n        status = 1000;\n      }\n      if (reason == null) {\n        reason = \"Normal closure\";\n      }\n      if (this.readyState !== Transport.OPEN) {\n        return false;\n      }\n      this.readyState = Transport.CLOSING;\n      this.close_frame = closeFrame(status, reason);\n      if (this.recv) {\n        this.recv.doSendFrame(this.close_frame);\n        if (this.recv) {\n          this.recv.didClose();\n        }\n        if (this.recv) {\n          this.unregister();\n        }\n      }\n      return true;\n    };\n\n    return Session;\n\n  })();\n\n  Session.bySessionId = function(session_id) {\n    if (!session_id) {\n      return null;\n    }\n    return MAP[session_id] || null;\n  };\n\n  register = function(req, server, session_id, receiver) {\n    var session;\n    session = Session.bySessionId(session_id);\n    if (!session) {\n      session = new Session(session_id, server);\n    }\n    session.register(req, receiver);\n    return session;\n  };\n\n  exports.register = function(req, server, receiver) {\n    return register(req, server, req.session, receiver);\n  };\n\n  exports.registerNoSession = function(req, server, receiver) {\n    return register(req, server, void 0, receiver);\n  };\n\n  GenericReceiver = (function() {\n    function GenericReceiver(thingy) {\n      this.thingy = thingy;\n      this.setUp(this.thingy);\n    }\n\n    GenericReceiver.prototype.setUp = function() {\n      this.thingy_end_cb = (function(_this) {\n        return function() {\n          return _this.didAbort();\n        };\n      })(this);\n      this.thingy.addListener('close', this.thingy_end_cb);\n      return this.thingy.addListener('end', this.thingy_end_cb);\n    };\n\n    GenericReceiver.prototype.tearDown = function() {\n      this.thingy.removeListener('close', this.thingy_end_cb);\n      this.thingy.removeListener('end', this.thingy_end_cb);\n      return this.thingy_end_cb = null;\n    };\n\n    GenericReceiver.prototype.didAbort = function() {\n      this.delay_disconnect = false;\n      return this.didClose();\n    };\n\n    GenericReceiver.prototype.didClose = function() {\n      if (this.thingy) {\n        this.tearDown(this.thingy);\n        this.thingy = null;\n      }\n      if (this.session) {\n        return this.session.unregister();\n      }\n    };\n\n    GenericReceiver.prototype.doSendBulk = function(messages) {\n      var m, q_msgs;\n      q_msgs = (function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = messages.length; i < len; i++) {\n          m = messages[i];\n          results.push(utils.quote(m));\n        }\n        return results;\n      })();\n      return this.doSendFrame('a' + '[' + q_msgs.join(',') + ']');\n    };\n\n    GenericReceiver.prototype.heartbeat = function() {\n      return this.doSendFrame('h');\n    };\n\n    return GenericReceiver;\n\n  })();\n\n  ResponseReceiver = (function(superClass) {\n    extend(ResponseReceiver, superClass);\n\n    ResponseReceiver.prototype.max_response_size = void 0;\n\n    ResponseReceiver.prototype.delay_disconnect = true;\n\n    function ResponseReceiver(request, response, options) {\n      var x;\n      this.request = request;\n      this.response = response;\n      this.options = options;\n      this.curr_response_size = 0;\n      try {\n        this.request.connection.setKeepAlive(true, 5000);\n      } catch (error) {\n        x = error;\n      }\n      ResponseReceiver.__super__.constructor.call(this, this.request.connection);\n      if (this.max_response_size === void 0) {\n        this.max_response_size = this.options.response_limit;\n      }\n    }\n\n    ResponseReceiver.prototype.doSendFrame = function(payload) {\n      var r, x;\n      this.curr_response_size += payload.length;\n      r = false;\n      try {\n        this.response.write(payload);\n        r = true;\n      } catch (error) {\n        x = error;\n      }\n      if (this.max_response_size && this.curr_response_size >= this.max_response_size) {\n        this.didClose();\n      }\n      return r;\n    };\n\n    ResponseReceiver.prototype.didClose = function() {\n      var x;\n      ResponseReceiver.__super__.didClose.apply(this, arguments);\n      try {\n        this.response.end();\n      } catch (error) {\n        x = error;\n      }\n      return this.response = null;\n    };\n\n    return ResponseReceiver;\n\n  })(GenericReceiver);\n\n  exports.GenericReceiver = GenericReceiver;\n\n  exports.Transport = Transport;\n\n  exports.Session = Session;\n\n  exports.ResponseReceiver = ResponseReceiver;\n\n  exports.SockJSConnection = SockJSConnection;\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
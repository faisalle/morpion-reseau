{"ast":null,"code":"'use strict';\n\nvar RingBuffer = require('./ring_buffer');\n\nvar Functor = function (session, method) {\n  this._session = session;\n  this._method = method;\n  this._queue = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending = 0;\n};\n\nFunctor.QUEUE_SIZE = 8;\n\nFunctor.prototype.call = function (error, message, callback, context) {\n  if (this._stopped) return;\n  var record = {\n    error: error,\n    message: message,\n    callback: callback,\n    context: context,\n    done: false\n  },\n      called = false,\n      self = this;\n\n  this._queue.push(record);\n\n  if (record.error) {\n    record.done = true;\n\n    this._stop();\n\n    return this._flushQueue();\n  }\n\n  var handler = function (err, msg) {\n    if (!(called ^ (called = true))) return;\n\n    if (err) {\n      self._stop();\n\n      record.error = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n\n    record.done = true;\n\n    self._flushQueue();\n  };\n\n  try {\n    this._session[this._method](message, handler);\n  } catch (err) {\n    handler(err);\n  }\n};\n\nFunctor.prototype._stop = function () {\n  this.pending = this._queue.length;\n  this._stopped = true;\n};\n\nFunctor.prototype._flushQueue = function () {\n  var queue = this._queue,\n      record;\n\n  while (queue.length > 0 && queue.peek().done) {\n    record = queue.shift();\n\n    if (record.error) {\n      this.pending = 0;\n      queue.clear();\n    } else {\n      this.pending -= 1;\n    }\n\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\n\nmodule.exports = Functor;","map":{"version":3,"names":["RingBuffer","require","Functor","session","method","_session","_method","_queue","QUEUE_SIZE","_stopped","pending","prototype","call","error","message","callback","context","record","done","called","self","push","_stop","_flushQueue","handler","err","msg","length","queue","peek","shift","clear","module","exports"],"sources":["/home/faisal/ServerExample/client/client/node_modules/websocket-extensions/lib/pipeline/functor.js"],"sourcesContent":["'use strict';\n\nvar RingBuffer = require('./ring_buffer');\n\nvar Functor = function(session, method) {\n  this._session = session;\n  this._method  = method;\n  this._queue   = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending  = 0;\n};\n\nFunctor.QUEUE_SIZE = 8;\n\nFunctor.prototype.call = function(error, message, callback, context) {\n  if (this._stopped) return;\n\n  var record = { error: error, message: message, callback: callback, context: context, done: false },\n      called = false,\n      self   = this;\n\n  this._queue.push(record);\n\n  if (record.error) {\n    record.done = true;\n    this._stop();\n    return this._flushQueue();\n  }\n\n  var handler = function(err, msg) {\n    if (!(called ^ (called = true))) return;\n\n    if (err) {\n      self._stop();\n      record.error   = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n\n    record.done = true;\n    self._flushQueue();\n  };\n\n  try {\n    this._session[this._method](message, handler);\n  } catch (err) {\n    handler(err);\n  }\n};\n\nFunctor.prototype._stop = function() {\n  this.pending  = this._queue.length;\n  this._stopped = true;\n};\n\nFunctor.prototype._flushQueue = function() {\n  var queue = this._queue, record;\n\n  while (queue.length > 0 && queue.peek().done) {\n    record = queue.shift();\n    if (record.error) {\n      this.pending = 0;\n      queue.clear();\n    } else {\n      this.pending -= 1;\n    }\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\n\nmodule.exports = Functor;\n"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAIC,OAAO,GAAG,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;EACtC,KAAKC,QAAL,GAAgBF,OAAhB;EACA,KAAKG,OAAL,GAAgBF,MAAhB;EACA,KAAKG,MAAL,GAAgB,IAAIP,UAAJ,CAAeE,OAAO,CAACM,UAAvB,CAAhB;EACA,KAAKC,QAAL,GAAgB,KAAhB;EACA,KAAKC,OAAL,GAAgB,CAAhB;AACD,CAND;;AAQAR,OAAO,CAACM,UAAR,GAAqB,CAArB;;AAEAN,OAAO,CAACS,SAAR,CAAkBC,IAAlB,GAAyB,UAASC,KAAT,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;EACnE,IAAI,KAAKP,QAAT,EAAmB;EAEnB,IAAIQ,MAAM,GAAG;IAAEJ,KAAK,EAAEA,KAAT;IAAgBC,OAAO,EAAEA,OAAzB;IAAkCC,QAAQ,EAAEA,QAA5C;IAAsDC,OAAO,EAAEA,OAA/D;IAAwEE,IAAI,EAAE;EAA9E,CAAb;EAAA,IACIC,MAAM,GAAG,KADb;EAAA,IAEIC,IAAI,GAAK,IAFb;;EAIA,KAAKb,MAAL,CAAYc,IAAZ,CAAiBJ,MAAjB;;EAEA,IAAIA,MAAM,CAACJ,KAAX,EAAkB;IAChBI,MAAM,CAACC,IAAP,GAAc,IAAd;;IACA,KAAKI,KAAL;;IACA,OAAO,KAAKC,WAAL,EAAP;EACD;;EAED,IAAIC,OAAO,GAAG,UAASC,GAAT,EAAcC,GAAd,EAAmB;IAC/B,IAAI,EAAEP,MAAM,IAAIA,MAAM,GAAG,IAAb,CAAR,CAAJ,EAAiC;;IAEjC,IAAIM,GAAJ,EAAS;MACPL,IAAI,CAACE,KAAL;;MACAL,MAAM,CAACJ,KAAP,GAAiBY,GAAjB;MACAR,MAAM,CAACH,OAAP,GAAiB,IAAjB;IACD,CAJD,MAIO;MACLG,MAAM,CAACH,OAAP,GAAiBY,GAAjB;IACD;;IAEDT,MAAM,CAACC,IAAP,GAAc,IAAd;;IACAE,IAAI,CAACG,WAAL;EACD,CAbD;;EAeA,IAAI;IACF,KAAKlB,QAAL,CAAc,KAAKC,OAAnB,EAA4BQ,OAA5B,EAAqCU,OAArC;EACD,CAFD,CAEE,OAAOC,GAAP,EAAY;IACZD,OAAO,CAACC,GAAD,CAAP;EACD;AACF,CAnCD;;AAqCAvB,OAAO,CAACS,SAAR,CAAkBW,KAAlB,GAA0B,YAAW;EACnC,KAAKZ,OAAL,GAAgB,KAAKH,MAAL,CAAYoB,MAA5B;EACA,KAAKlB,QAAL,GAAgB,IAAhB;AACD,CAHD;;AAKAP,OAAO,CAACS,SAAR,CAAkBY,WAAlB,GAAgC,YAAW;EACzC,IAAIK,KAAK,GAAG,KAAKrB,MAAjB;EAAA,IAAyBU,MAAzB;;EAEA,OAAOW,KAAK,CAACD,MAAN,GAAe,CAAf,IAAoBC,KAAK,CAACC,IAAN,GAAaX,IAAxC,EAA8C;IAC5CD,MAAM,GAAGW,KAAK,CAACE,KAAN,EAAT;;IACA,IAAIb,MAAM,CAACJ,KAAX,EAAkB;MAChB,KAAKH,OAAL,GAAe,CAAf;MACAkB,KAAK,CAACG,KAAN;IACD,CAHD,MAGO;MACL,KAAKrB,OAAL,IAAgB,CAAhB;IACD;;IACDO,MAAM,CAACF,QAAP,CAAgBH,IAAhB,CAAqBK,MAAM,CAACD,OAA5B,EAAqCC,MAAM,CAACJ,KAA5C,EAAmDI,MAAM,CAACH,OAA1D;EACD;AACF,CAbD;;AAeAkB,MAAM,CAACC,OAAP,GAAiB/B,OAAjB"},"metadata":{},"sourceType":"script"}